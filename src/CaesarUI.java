
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author lumineo
 */
public class CaesarUI extends javax.swing.JFrame {
    
    String cipher(String msg, int shift, String alphabet[]){
        int oldShift = shift;
        String s = "";
        if (shift == 0) { // kui nihke väärtus on 0 siis väljastab nii nagu on
            s = msg;
        } else {
            
            for (int x = 0; x < msg.length(); ++x) { // for loop kestab nii kaua, kui suur sõna sul on
                char c = msg.charAt(x); // teeb täheks for loopi abil
                if (c == ' ') { // kui sõna sees on tühik
                        s += c;
                } else if (Character.isDigit(c)) { // Kontrollib, kas täht on number
                    s += c;
                } else { // Kui täht pole number, siis hakkab nihutamine pihta
                    for (int y = 0; y < alphabet.length; y++) { // Teeb for loopi nii kaua kuni täht on leitud
                        String strAlp = alphabet[y]; 

                        if (strAlp.equalsIgnoreCase("" + c)) { // 
                            if (shift > 0 && shift < alphabet.length) {
                                shift = y  + shift;
                            }
                            while (shift < 0) { // kui nihuti arv on negatiivne
                                shift = y + shift;
                                if (shift < 0) { // kui nihuti arv on ikka veel negatiivne
                                    shift = alphabet.length - Math.abs(shift);
                                }

                            }
                            while (shift >= alphabet.length) { // kui nihke on suurem, kui tähetik
                                shift = alphabet.length - shift;
                                while (shift < 0) { // kui nihuti on ikka suure, kui tähestik
                                    shift = alphabet.length - Math.abs(shift);
                                }
                            }
                            break; // Kui tähe nihutamine on lõppenud, siis läheb järgmise tähe juurde
                        }

                    }
                    // kommenteeritud kood töötab, kui soovid väljastada selliseid tekste TeRe TooMas
                    //if (Character.isLowerCase(c)) {
                    //    s += alphabet[shift].toLowerCase();
                    //} else if (Character.isUpperCase(c)) {
                    //    s += alphabet[shift].toUpperCase();
                    //}
                    s += alphabet[shift].toUpperCase(); // lisab tähe sõnasse juurde
                    shift = oldShift; // Taastab nihuti tegeliku arvu, muidu ta hakkab lollusi tegema.
                }
            }
        }
        return s; // Tagastab nihutatud sõna
    }
    /**
     * Creates new form CaesarUI
     */
    public CaesarUI() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        JOptionPane.showMessageDialog(null, 
                        "Klaviatuuri otseteed: \n"
                        + "NOOL ALLA - Nihe langeb ühe võrra \n"
                        + "NOOL ÜLES - Nihe suureneb ühe võrra \n"
                        + "ENTER - Krüpteerib/dekrüpteerib\n\n"
                        + "Tähestikud: \n"
                        + "Eesti tähestik (võõrtähed) - 32 tähte\n"
                        + "Eesti tähestik (ametlik) - 27 tähte\n"
                        + "Eesti tähestik (võõrtähtedeta) - 23 tähte\n"
                        + "Inglise tähestik - 26 tähte\n", 
                "Caesari Nihe", JOptionPane.INFORMATION_MESSAGE);
                
        cmbAlphabet.addItem("Eesti tähestik (võõrtähted) 32 tähte");
        cmbAlphabet.addItem("Eesti tähestik (ametlik) 27 tähte");
        cmbAlphabet.addItem("Eesti tähestik (võõrtähtedeta) 23 tähte");
        cmbAlphabet.addItem("Inglise tähesik 26 tähte");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngCrypt = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        txtInput = new javax.swing.JTextField();
        txtOutput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cmbAlphabet = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        spnShift = new javax.swing.JSpinner();
        btnCrypt = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        lblAlphabet = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Caesari Nihe");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Vaikimisi asjad"));

        txtInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtInputKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInputKeyTyped(evt);
            }
        });

        txtOutput.setEditable(false);
        txtOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOutputActionPerformed(evt);
            }
        });

        jLabel1.setText("Tähestik:");

        cmbAlphabet.setToolTipText("");
        cmbAlphabet.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAlphabetItemStateChanged(evt);
            }
        });
        cmbAlphabet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAlphabetActionPerformed(evt);
            }
        });

        jLabel2.setText("Nihe:");

        btnCrypt.setText("Alusta");
        btnCrypt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCryptMouseClicked(evt);
            }
        });

        btnClear.setText("Puhasta");
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearMouseClicked(evt);
            }
        });

        lblAlphabet.setText("ABCDEFGHIJKLMNOPQRSŠZŽTUVWÕÄÖÜXY  32 tähte");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtInput)
                    .addComponent(txtOutput)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 223, Short.MAX_VALUE)
                                .addComponent(lblAlphabet))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbAlphabet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spnShift, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCrypt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(14, 14, 14)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(cmbAlphabet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCrypt))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnShift, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnClear))
                .addGap(45, 45, 45)
                .addComponent(lblAlphabet)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseClicked
        txtInput.setText("");
        txtOutput.setText("");
    }//GEN-LAST:event_btnClearMouseClicked

    private void start() {
        String input = txtInput.getText();
        int shift = (Integer) spnShift.getValue();
        int lenght = input.length();
        switch (cmbAlphabet.getSelectedIndex()) {
            case 0:
                String estonia[] = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "Š", "Z", "Ž", "T", "U", "V", "W", "Õ", "Ä", "Ö", "Ü", "X", "Y"};
                txtOutput.setText(cipher(input, shift, estonia));
                break;
            case 1:
                String estonia2[] = { "A", "B", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "R", "S", "Š", "Z", "Ž", "T", "U", "V", "Õ", "Ä", "Ö", "Ü" };
                txtOutput.setText(cipher(input, shift, estonia2));
                break;
            case 2:
                String estonia3[] = { "A", "B", "D", "E", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "R", "S", "T", "U", "V", "Õ", "Ä", "Ö", "Ü"};
                txtOutput.setText(cipher(input, shift, estonia3));
                break;
            default:
                String america[] = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" };
                txtOutput.setText(cipher(input, shift, america));
                break;
        }
    }
    private void btnCryptMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCryptMouseClicked
        start();

    }//GEN-LAST:event_btnCryptMouseClicked

    private void cmbAlphabetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAlphabetActionPerformed

    }//GEN-LAST:event_cmbAlphabetActionPerformed

    private void cmbAlphabetItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAlphabetItemStateChanged
        // TODO add your handling code here:
        
        switch (cmbAlphabet.getSelectedIndex()) {
            case 0:
            lblAlphabet.setText( "ABCDEFGHIJKLMNOPQRSŠZŽTUVWÕÄÖÜXY  32 tähte" );
            break;
            case 1:
            lblAlphabet.setText( "ABDEFGHIJKLMNOPRSŠZŽTUVÕÄÖÜ  27 tähte" );
            break;
            case 2:
            lblAlphabet.setText( "ABDEGHIJKLMNOPRSTUVÕÄÖÜ  23 tähte" );
            break;
            default:
            lblAlphabet.setText( "ABCDEFGHIJKLMNOPQRSTUVWXYZ   26 tähte" );
            break;
        }
    }//GEN-LAST:event_cmbAlphabetItemStateChanged

    private void txtOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOutputActionPerformed

    }//GEN-LAST:event_txtOutputActionPerformed

    private void txtInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInputKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            start();
        } else if (evt.getKeyCode() == evt.VK_UP) {
            int current = (int) spnShift.getValue();
            spnShift.setValue(current + 1);
        } else if (evt.getKeyCode() == evt.VK_DOWN) {
            int current = (int) spnShift.getValue();
            spnShift.setValue(current - 1);
        }
    }//GEN-LAST:event_txtInputKeyPressed

    private void txtInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInputKeyTyped
        char c=evt.getKeyChar();
        if(!(Character.isAlphabetic(c) ||
                Character.isDigit(c) ||
                c == evt.VK_DELETE  ||
                c == evt.VK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtInputKeyTyped
    public static void setUIFont (javax.swing.plaf.FontUIResource f){
        java.util.Enumeration keys = UIManager.getDefaults().keys();
        while (keys.hasMoreElements()) {
            Object key = keys.nextElement();
            Object value = UIManager.get (key);
            if (value instanceof javax.swing.plaf.FontUIResource)
                UIManager.put (key, f);
            }
    } 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            setUIFont (new javax.swing.plaf.FontUIResource("Verdana",Font.PLAIN,12));
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CaesarUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CaesarUI().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCrypt;
    private javax.swing.ButtonGroup btngCrypt;
    private javax.swing.JComboBox<String> cmbAlphabet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAlphabet;
    private javax.swing.JSpinner spnShift;
    private javax.swing.JTextField txtInput;
    private javax.swing.JTextField txtOutput;
    // End of variables declaration//GEN-END:variables
}
